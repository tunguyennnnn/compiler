ClassDecls ProgBody
ClassDecls program FuncBody ; FuncDecls
ClassDecls program FuncBody ; FuncDecl FuncDecls
ClassDecls program FuncBody ; FuncDecl ε
ClassDecls program FuncBody ; FuncHead FuncBody ; ε
ClassDecls program FuncBody ; FuncHead { FuncBodyInner } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken VarDeclTail } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; FuncBodyInner } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken VarDeclorAssignStat } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Statements } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Statement Statements } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Statement Statement Statements } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Statement Statement ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Statement StatementSpecial ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Statement return ( Expr ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Statement return ( ArithExpr RelExprTail ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Statement return ( ArithExpr ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Statement return ( Term ArithExprDs ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Statement return ( Term ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Statement return ( Factor TermDs ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Statement return ( Factor ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Statement return ( VarHead ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Statement return ( id VarHeadTail ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Statement return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; AssignStat ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Variable AssignOp Expr ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Variable AssignOp ArithExpr RelExprTail ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Variable AssignOp ArithExpr ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Variable AssignOp Term ArithExprDs ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Variable AssignOp Term ArithExprD ArithExprDs ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Variable AssignOp Term ArithExprD ArithExprD ArithExprDs ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Variable AssignOp Term ArithExprD ArithExprD ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Variable AssignOp Term ArithExprD AddOp Term ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Variable AssignOp Term ArithExprD AddOp Factor TermDs ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Variable AssignOp Term ArithExprD AddOp Factor ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Variable AssignOp Term ArithExprD AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Variable AssignOp Term AddOp Term AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Variable AssignOp Term AddOp Factor TermDs AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Variable AssignOp Term AddOp Factor ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Variable AssignOp Term AddOp ( ArithExpr ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Variable AssignOp Term AddOp ( Term ArithExprDs ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Variable AssignOp Term AddOp ( Term ArithExprD ArithExprDs ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Variable AssignOp Term AddOp ( Term ArithExprD ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Variable AssignOp Term AddOp ( Term AddOp Term ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Variable AssignOp Term AddOp ( Term AddOp Factor TermDs ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Variable AssignOp Term AddOp ( Term AddOp Factor ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Variable AssignOp Term AddOp ( Term AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Variable AssignOp Term AddOp ( Factor TermDs AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Variable AssignOp Term AddOp ( Factor ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Variable AssignOp Term AddOp ( ( ArithExpr ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Variable AssignOp Term AddOp ( ( Term ArithExprDs ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Variable AssignOp Term AddOp ( ( Term ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Variable AssignOp Term AddOp ( ( Factor TermDs ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Variable AssignOp Term AddOp ( ( Factor TermD TermDs ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Variable AssignOp Term AddOp ( ( Factor TermD ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Variable AssignOp Term AddOp ( ( Factor MulOp Factor ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Variable AssignOp Term AddOp ( ( Factor MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Variable AssignOp Term AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Variable AssignOp Factor TermDs AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Variable AssignOp Factor ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; Variable AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; idToken Indices VariableTail AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; idToken Indices ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Expr ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp ArithExpr RelExprTail ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp ArithExpr ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Term ArithExprDs ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Term ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Factor TermDs ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Factor TermD TermDs ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Factor TermD ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Factor MulOp Factor ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Factor MulOp ( ArithExpr ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Factor MulOp ( Term ArithExprDs ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Factor MulOp ( Term ArithExprD ArithExprDs ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Factor MulOp ( Term ArithExprD ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Factor MulOp ( Term AddOp Term ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Factor MulOp ( Term AddOp Factor TermDs ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Factor MulOp ( Term AddOp Factor TermD TermDs ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Factor MulOp ( Term AddOp Factor TermD ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Factor MulOp ( Term AddOp Factor MulOp Factor ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Factor MulOp ( Term AddOp Factor MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Factor MulOp ( Term AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Factor MulOp ( Factor TermDs AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Factor MulOp ( Factor ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp Factor MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ArraySizes ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; FuncHead { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; Type idToken ( FParams ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; Type idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program FuncBody ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { FuncBodyInner } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken VarDeclTail } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; FuncBodyInner } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken VarDeclTail } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; FuncBodyInner } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken VarDeclTail } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; FuncBodyInner } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken VarDeclTail } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; FuncBodyInner } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken VarDeclorAssignStat } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; FuncBodyInner } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken VarDeclorAssignStat } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; FuncBodyInner } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statements } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statements } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statements } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement Statements } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement Statement Statements } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement Statement Statement Statements } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement Statement Statement Statement Statements } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement Statement Statement Statement ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement Statement Statement StatementSpecial ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement Statement Statement put ( Expr ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement Statement Statement put ( ArithExpr RelExprTail ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement Statement Statement put ( ArithExpr ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement Statement Statement put ( Term ArithExprDs ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement Statement Statement put ( Term ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement Statement Statement put ( Factor TermDs ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement Statement Statement put ( Factor ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement Statement Statement put ( VarHead ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement Statement Statement put ( id VarHeadTail ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement Statement Statement put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement Statement StatementSpecial put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement Statement put ( Expr ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement Statement put ( ArithExpr RelExprTail ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement Statement put ( ArithExpr ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement Statement put ( Term ArithExprDs ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement Statement put ( Term ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement Statement put ( Factor TermDs ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement Statement put ( Factor ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement Statement put ( VarHead ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement Statement put ( id VarHeadTail ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement Statement put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement AssignStat ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement Variable AssignOp Expr ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement Variable AssignOp ArithExpr RelExprTail ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement Variable AssignOp ArithExpr ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement Variable AssignOp Term ArithExprDs ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement Variable AssignOp Term ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement Variable AssignOp Factor TermDs ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement Variable AssignOp Factor ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement Variable AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices VariableTail AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . Variable AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indices VariableTail AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indices ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indices ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice Indices ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice Indice Indices ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice Indice Indice Indices ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice Indice Indice Indice Indices ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice Indice Indice Indice Indice Indices ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice Indice Indice Indice Indice Indice Indices ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice Indice Indice Indice Indice Indice ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice Indice Indice Indice Indice [ ArithExpr ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice Indice Indice Indice Indice [ Term ArithExprDs ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice Indice Indice Indice Indice [ Term ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice Indice Indice Indice Indice [ Factor TermDs ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice Indice Indice Indice Indice [ Factor ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice Indice Indice Indice Indice [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice Indice Indice Indice [ ArithExpr ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice Indice Indice Indice [ Term ArithExprDs ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice Indice Indice Indice [ Term ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice Indice Indice Indice [ Factor TermDs ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice Indice Indice Indice [ Factor ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice Indice Indice Indice [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice Indice Indice [ ArithExpr ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice Indice Indice [ Term ArithExprDs ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice Indice Indice [ Term ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice Indice Indice [ Factor TermDs ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice Indice Indice [ Factor ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice Indice Indice [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice Indice [ ArithExpr ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice Indice [ Term ArithExprDs ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice Indice [ Term ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice Indice [ Factor TermDs ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice Indice [ Factor ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice Indice [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice [ ArithExpr ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice [ Term ArithExprDs ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice [ Term ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice [ Factor TermDs ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice [ Factor ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice Indice [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice [ ArithExpr ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice [ Term ArithExprDs ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice [ Term ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice [ Factor TermDs ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice [ Factor ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken Indice [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken [ ArithExpr ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken [ Term ArithExprDs ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken [ Term ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken [ Factor TermDs ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken [ Factor ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indices . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indice Indices . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indice Indice Indices . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indice Indice Indice Indices . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indice Indice Indice Indice Indices . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indice Indice Indice Indice ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indice Indice Indice [ ArithExpr ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indice Indice Indice [ Term ArithExprDs ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indice Indice Indice [ Term ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indice Indice Indice [ Factor TermDs ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indice Indice Indice [ Factor ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indice Indice Indice [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indice Indice [ ArithExpr ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indice Indice [ Term ArithExprDs ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indice Indice [ Term ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indice Indice [ Factor TermDs ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indice Indice [ Factor ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indice Indice [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indice [ ArithExpr ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indice [ Term ArithExprDs ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indice [ Term ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indice [ Factor TermDs ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indice [ Factor ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken Indice [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken [ ArithExpr ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken [ Term ArithExprDs ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken [ Term ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken [ Factor TermDs ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken [ Factor ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Statement idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement AssignStat ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Variable AssignOp Expr ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Variable AssignOp ArithExpr RelExprTail ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Variable AssignOp ArithExpr ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Variable AssignOp Term ArithExprDs ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Variable AssignOp Term ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Variable AssignOp Factor TermDs ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Variable AssignOp Factor ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement Variable AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices VariableTail AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . Variable AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indices VariableTail AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indices ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indices ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice Indices ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice Indice Indices ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice Indice Indice Indices ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice Indice Indice Indice Indices ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice Indice Indice Indice Indice Indices ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice Indice Indice Indice Indice Indice Indices ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice Indice Indice Indice Indice Indice ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice Indice Indice Indice Indice [ ArithExpr ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice Indice Indice Indice Indice [ Term ArithExprDs ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice Indice Indice Indice Indice [ Term ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice Indice Indice Indice Indice [ Factor TermDs ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice Indice Indice Indice Indice [ Factor ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice Indice Indice Indice Indice [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice Indice Indice Indice [ ArithExpr ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice Indice Indice Indice [ Term ArithExprDs ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice Indice Indice Indice [ Term ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice Indice Indice Indice [ Factor TermDs ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice Indice Indice Indice [ Factor ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice Indice Indice Indice [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice Indice Indice [ ArithExpr ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice Indice Indice [ Term ArithExprDs ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice Indice Indice [ Term ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice Indice Indice [ Factor TermDs ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice Indice Indice [ Factor ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice Indice Indice [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice Indice [ ArithExpr ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice Indice [ Term ArithExprDs ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice Indice [ Term ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice Indice [ Factor TermDs ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice Indice [ Factor ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice Indice [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice [ ArithExpr ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice [ Term ArithExprDs ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice [ Term ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice [ Factor TermDs ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice [ Factor ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice Indice [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice [ ArithExpr ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice [ Term ArithExprDs ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice [ Term ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice [ Factor TermDs ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice [ Factor ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken Indice [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken [ ArithExpr ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken [ Term ArithExprDs ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken [ Term ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken [ Factor TermDs ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken [ Factor ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken Indices . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Statement idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement AssignStat ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Variable AssignOp Expr ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Variable AssignOp ArithExpr RelExprTail ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Variable AssignOp ArithExpr ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Variable AssignOp Term ArithExprDs ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Variable AssignOp Term ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Variable AssignOp Factor TermDs ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Variable AssignOp Factor ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Variable AssignOp VarHead ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Variable AssignOp id VarHeadTail ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Variable AssignOp id VarHeadEnd ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Variable AssignOp id . VarHead ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Variable AssignOp id . id VarHeadTail ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Variable AssignOp id . id ( AParams ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Variable AssignOp id . id ( Expr AParamsTails ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Variable AssignOp id . id ( Expr ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Variable AssignOp id . id ( ArithExpr RelExprTail ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Variable AssignOp id . id ( ArithExpr ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Variable AssignOp id . id ( Term ArithExprDs ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Variable AssignOp id . id ( Term ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Variable AssignOp id . id ( Factor TermDs ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Variable AssignOp id . id ( Factor ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Variable AssignOp id . id ( VarHead ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Variable AssignOp id . id ( id VarHeadTail ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement Variable AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement idToken Indices VariableTail AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement idToken Indices ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Statement idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial AssignStat ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Variable AssignOp Expr ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Variable AssignOp ArithExpr RelExprTail ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Variable AssignOp ArithExpr ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Variable AssignOp Term ArithExprDs ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Variable AssignOp Term ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Variable AssignOp Factor TermDs ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Variable AssignOp Factor ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Variable AssignOp VarHead ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Variable AssignOp id VarHeadTail ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Variable AssignOp id VarHeadEnd ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Variable AssignOp id . VarHead ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Variable AssignOp id . id VarHeadTail ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Variable AssignOp id . id ( AParams ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Variable AssignOp id . id ( Expr AParamsTails ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Variable AssignOp id . id ( Expr ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Variable AssignOp id . id ( ArithExpr RelExprTail ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Variable AssignOp id . id ( ArithExpr ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Variable AssignOp id . id ( Term ArithExprDs ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Variable AssignOp id . id ( Term ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Variable AssignOp id . id ( Factor TermDs ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Variable AssignOp id . id ( Factor ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Variable AssignOp id . id ( VarHead ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Variable AssignOp id . id ( id VarHeadTail ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial Variable AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial idToken Indices VariableTail AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial idToken Indices ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; StatementSpecial idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; AssignStat ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; AssignStat ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; AssignStat ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; AssignStat ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; AssignStat ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; AssignStat ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp Expr ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp ArithExpr RelExprTail ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp ArithExpr ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp Term ArithExprDs ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp Term ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp Factor TermDs ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp Factor ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp ( ArithExpr ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp ( Term ArithExprDs ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp ( Term ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp ( Factor TermDs ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp ( Factor TermD TermDs ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp ( Factor TermD ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp ( Factor MulOp Factor ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp ( Factor MulOp VarHead ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp ( Factor MulOp id VarHeadTail ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp ( Factor MulOp id ( AParams ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp ( Factor MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp ( VarHead MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp ( id VarHeadTail MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp ( id Indices VarHeadEnd MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp ( id Indices ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp ( id Indice Indices ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp ( id Indice ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp ( id [ ArithExpr ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp ( id [ Term ArithExprDs ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp ( id [ Term ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp ( id [ Factor TermDs ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp ( id [ Factor ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp ( id [ VarHead ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp ( id [ id VarHeadTail ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; idToken Indices VariableTail AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; idToken Indices ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; idToken Indice Indices ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; idToken Indice ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; idToken [ ArithExpr ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; idToken [ Term ArithExprDs ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; idToken [ Term ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; idToken [ Factor TermDs ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; idToken [ Factor ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; idToken [ VarHead ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; idToken [ id VarHeadTail ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Expr ; RelExpr ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp ArithExpr RelExprTail ; RelExpr ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp ArithExpr ε ; RelExpr ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Term ArithExprDs ε ; RelExpr ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Term ArithExprD ArithExprDs ε ; RelExpr ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Term ArithExprD ε ε ; RelExpr ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Term AddOp Term ε ε ; RelExpr ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Term AddOp Factor TermDs ε ε ; RelExpr ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Term AddOp Factor ε ε ε ; RelExpr ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Term AddOp integerNumber ε ε ε ; RelExpr ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Factor TermDs AddOp integerNumber ε ε ε ; RelExpr ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp Factor ε AddOp integerNumber ε ε ε ; RelExpr ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp VarHead ε AddOp integerNumber ε ε ε ; RelExpr ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp id VarHeadTail ε AddOp integerNumber ε ε ε ; RelExpr ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; RelExpr ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; RelExpr ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; RelExpr ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; RelExpr ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; ArithExpr RelOp ArithExpr ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; ArithExpr RelOp Term ArithExprDs ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; ArithExpr RelOp Term ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; ArithExpr RelOp Factor TermDs ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; ArithExpr RelOp Factor ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; ArithExpr RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; Term ArithExprDs RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; Term ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; Factor TermDs ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; Factor ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; VarHead ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id VarHeadTail ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( Type idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySizes ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySize ArraySizes ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySize ArraySize ArraySizes ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySize ArraySize ArraySize ArraySizes ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySize ArraySize ArraySize ArraySize ArraySizes ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySize ArraySize ArraySize ArraySize ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySize ArraySize ArraySize [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySize ArraySize [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken ArraySize [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ArraySizes ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ArraySizes ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySizes ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySize ArraySizes ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken ArraySize ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecls program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecl ClassDecls program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
ClassDecl ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { ClassBody } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken VarOrFuncDecl } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; ClassBody } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken VarOrFuncDecl } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; ClassBody } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken VarOrFuncDecl } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncDecls } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncDecl FuncDecls } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncDecl ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead FuncBody ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { FuncBodyInner } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken VarDeclTail } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; FuncBodyInner } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken VarDeclTail } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; FuncBodyInner } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken VarDeclorAssignStat } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; Statements } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; Statement Statements } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; Statement Statement Statements } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; Statement Statement ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; Statement StatementSpecial ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; Statement return ( Expr ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; Statement return ( ArithExpr RelExprTail ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; Statement return ( ArithExpr ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; Statement return ( Term ArithExprDs ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; Statement return ( Term ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; Statement return ( Factor TermDs ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; Statement return ( Factor ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; Statement return ( VarHead ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; Statement return ( id VarHeadTail ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; Statement return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; StatementSpecial return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; AssignStat ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; AssignStat ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; AssignStat ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; AssignStat ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; AssignStat ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; AssignStat ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; AssignStat ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; AssignStat ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; AssignStat ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; AssignStat ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; AssignStat ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; AssignStat ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp Expr ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp ArithExpr RelExprTail ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp ArithExpr ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp Term ArithExprDs ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp Term ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp Factor TermDs ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp Factor ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp VarHead ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp id VarHeadTail ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp id Indices VarHeadEnd ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp id Indices ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp id Indice Indices ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp id Indice ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp id [ ArithExpr ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp id [ Term ArithExprDs ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp id [ Term ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp id [ Factor TermDs ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp id [ Factor ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp id [ VarHead ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp id [ id VarHeadTail ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; idToken Indices VariableTail AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; idToken Indices ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp ArithExpr RelExprTail ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp ArithExpr RelOp ArithExpr ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp ArithExpr RelOp Term ArithExprDs ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp ArithExpr RelOp Term ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp ArithExpr RelOp Factor TermDs ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp ArithExpr RelOp Factor ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp ArithExpr RelOp VarHead ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp ArithExpr RelOp id VarHeadTail ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp ArithExpr RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Term ArithExprDs RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Term ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Factor TermDs ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Factor ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp VarHead ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp id VarHeadTail ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp id Indices VarHeadEnd ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp id Indices ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp id Indice Indices ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp id Indice ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp id [ ArithExpr ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp id [ Term ArithExprDs ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp id [ Term ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp id [ Factor TermDs ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp id [ Factor ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp id [ VarHead ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp id [ id VarHeadTail ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ArithExpr RelExprTail ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ArithExpr ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Term ArithExprDs ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Term ArithExprD ArithExprDs ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Term ArithExprD ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Term AddOp Term ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Term AddOp Factor TermDs ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Term AddOp Factor ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Term AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Factor TermDs AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Factor ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( ArithExpr ) ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( Term ArithExprDs ) ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( Term ε ) ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( Factor TermDs ε ) ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( Factor ε ε ) ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( VarHead ε ε ) ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id VarHeadTail ε ε ) ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; ArithExpr RelOp ArithExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; ArithExpr RelOp Term ArithExprDs ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; ArithExpr RelOp Term ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; ArithExpr RelOp Factor TermDs ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; ArithExpr RelOp Factor ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; ArithExpr RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; Term ArithExprDs RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; Term ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; Factor TermDs ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; Factor ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; VarHead ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id VarHeadTail ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ArraySizes ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; FuncHead { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; Type idToken ( FParams ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; Type idToken ( Type idToken ArraySizes FParamsTails ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; Type idToken ( Type idToken ArraySizes ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; Type idToken ( Type idToken ArraySize ArraySizes ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; Type idToken ( Type idToken ArraySize ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; Type idToken ( Type idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; Type idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) FuncBody ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { FuncBodyInner } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken VarDeclTail } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; FuncBodyInner } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken VarDeclTail } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; FuncBodyInner } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken VarDeclorAssignStat } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; Statements } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; Statement Statements } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; Statement Statement Statements } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; Statement Statement ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; Statement StatementSpecial ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; Statement return ( Expr ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; Statement return ( ArithExpr RelExprTail ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; Statement return ( ArithExpr ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; Statement return ( Term ArithExprDs ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; Statement return ( Term ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; Statement return ( Factor TermDs ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; Statement return ( Factor ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; Statement return ( VarHead ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; Statement return ( id VarHeadTail ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; Statement return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; StatementSpecial return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; AssignStat ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; AssignStat ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; AssignStat ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; AssignStat ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; AssignStat ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; AssignStat ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; AssignStat ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; AssignStat ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; AssignStat ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; AssignStat ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; AssignStat ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; AssignStat ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp Expr ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp ArithExpr RelExprTail ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp ArithExpr ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp Term ArithExprDs ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp Term ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp Factor TermDs ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp Factor ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp VarHead ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp id VarHeadTail ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp id Indices VarHeadEnd ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp id Indices ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp id Indice Indices ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp id Indice ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp id [ ArithExpr ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp id [ Term ArithExprDs ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp id [ Term ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp id [ Factor TermDs ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp id [ Factor ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp id [ VarHead ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp id [ id VarHeadTail ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; Variable AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; idToken Indices VariableTail AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; idToken Indices ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Expr ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp ArithExpr RelExprTail ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp ArithExpr RelOp ArithExpr ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp ArithExpr RelOp Term ArithExprDs ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp ArithExpr RelOp Term ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp ArithExpr RelOp Factor TermDs ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp ArithExpr RelOp Factor ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp ArithExpr RelOp VarHead ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp ArithExpr RelOp id VarHeadTail ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp ArithExpr RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Term ArithExprDs RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Term ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Factor TermDs ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp Factor ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp VarHead ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp id VarHeadTail ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp id Indices VarHeadEnd ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp id Indices ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp id Indice Indices ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp id Indice ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp id [ ArithExpr ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp id [ Term ArithExprDs ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp id [ Term ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp id [ Factor TermDs ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp id [ Factor ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp id [ VarHead ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp id [ id VarHeadTail ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Expr ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ArithExpr RelExprTail ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp ArithExpr ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Term ArithExprDs ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Term ArithExprD ArithExprDs ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Term ArithExprD ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Term AddOp Term ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Term AddOp Factor TermDs ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Term AddOp Factor ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Term AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Factor TermDs AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp Factor ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp VarHead ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id VarHeadTail ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; RelExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; ArithExpr RelOp ArithExpr ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; ArithExpr RelOp Term ArithExprDs ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; ArithExpr RelOp Term ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; ArithExpr RelOp Factor TermDs ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; ArithExpr RelOp Factor ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; ArithExpr RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; Term ArithExprDs RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; Term ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; Factor TermDs ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; Factor ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; VarHead ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id VarHeadTail ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( Type idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ArraySizes ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ArraySizes ; intToken idToken ε ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken FParams ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken Type idToken ArraySizes FParamsTails ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken Type idToken ArraySizes ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken Type idToken ArraySize ArraySizes ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken Type idToken ArraySize ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken Type idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; Type idToken int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; Type idToken ; int idToken int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; float idToken ; int idToken int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; float idToken ; int idToken int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; float idToken ; int idToken int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; float idToken ; int idToken int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; float idToken ; int idToken int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; float idToken ; int idToken int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; float idToken ; int idToken int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; float idToken ; int idToken int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; float idToken ; int idToken int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; float idToken ; int idToken int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; float idToken ; int idToken int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; float idToken ; int idToken int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; float idToken ; int idToken int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; float idToken ; int idToken int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; float idToken ; int idToken int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
class idToken { Type idToken ArraySizes() ; float idToken ; int idToken int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; int idToken ( int idToken [ intToken ] ε ε ) { intToken idToken ε ; intToken idToken ε ; idToken AssignOp ( id ε ε ε ) ε AddOp integerNumber ε ε ε ; for ( int idToken AssignOp id [ id ε ε ε ] ε ε ε ε RelOp id ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken ε ε AssignOp id [ id ε ε ε ] ε ε ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε } ; ε program { intToken idToken [ intToken ] ε ; intToken idToken ε ; intToken idToken ε ; intToken idToken ε ; idToken idToken ε ; idToken idToken [ intToken ] [ intToken ] [ intToken ] [ intToken ] ε ; for ( int idToken AssignOp id ε ε AddOp integerNumber ε ε ε ; id ε ε ε RelOp integerNumber ε ε ; idToken [ id ε ε ε ] ε ε AssignOp ( id [ id ε ε ε ] ε ε MulOp id ( ε ) ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε ε AssignOp id . id ( id ε ε ε ε ε ) ε ε ε ; idToken ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε . idToken [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] [ integerNumber ε ε ] ε ε AssignOp integerNumber ε ε ε ; put ( id ε ε ε ε ) ; put ( id ε ε ε ε ) ; ε } ; float idToken ( ε ) { floatToken idToken ε ; idToken AssignOp integerNumber MulOp ( integerNumber ε AddOp floatNumber MulOp floatNumber ε ε ) ε ε ε ; idToken ε ε AssignOp floatNumber ε AddOp ( ( floatNumber MulOp floatNumber ε ε ) ε AddOp floatNumber ε ε ) ε AddOp floatNumber ε ε ε ; return ( id ε ε ε ε ) ; ε } ; ε
